#--------------------------通用配置-------------------------
spring:
  application:
    # 应用名
    name: EggplantNovel
  profiles:
    # 激活特定配置
    active: dev
  jackson:
    generator:
      # JSON 序列化时，将所有 Number 类型的属性都转为 String 类型返回，避免前端数据精度丢失的问题。
      # 由于 Javascript 标准规定所有数字处理都应使用 64 位 IEEE 754 浮点值完成，
      # 结果是某些 64 位整数值无法准确表示（尾数只有 51 位宽）
      write-numbers-as-strings: true
  servlet:
    multipart:
      # 上传文件最大大小
      max-file-size: 5MB
server:
  # 端口号
  port: 8888

--- #---------------------自定义配置----------------------------
novel:
  # 跨域配置
  cors:
    # 允许跨域的域名
    allow-origins:
      - http://localhost:1024
      - http://localhost:8080
  # JWT密钥
  jwt:
    secret: E66559580A1ADF48CDD928516062F12E
  # XSS 过滤配置
  xss:
    # 过滤开关
    enabled: true
    # 排除链接
    excludes:
      - /system/notice/*
  file:
    # 文件上传配置
    upload:
      # 上传路径
      path: /Users/xiongxiaoyang/upload

--- #---------------------数据源配置----------------------------
spring:
  datasource:
    url: jdbc:mysql://106.15.106.128:3306/novel?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: novel
    password: anP8hyPSyppiWrbz

--- #---------------------中间件配置---------------------------
spring:
  # Redis 配置
  redis:
    host: 127.0.0.1
    port: 6379
    # password:

  elasticsearch:
    # 是否开启 elasticsearch 搜索引擎功能：true-开启 false-不开启
    enable: false

  # Spring AMQP 配置
  amqp:
    # 是否开启 Spring AMQP：true-开启 false-不开启
    enabled: false
  # RabbitMQ 配置
  rabbitmq:
    addresses: "amqp://guest:guest@81.68.221.93"
    virtual-host: novel
    template:
      retry:
        # 开启重试
        enabled: true
        # 最大重试次数
        max-attempts: 3
        # 第一次和第二次重试之间的持续时间
        initial-interval: "3s"

  shardingsphere:
    # 是否开启 shardingsphere
    enabled: true
    props:
      # 是否在日志中打印 SQL
      sql-show: true
    # 模式配置
    mode:
      # 单机模式
      type: Standalone
      repository:
        # 文件持久化
        type: File
        props:
          # 元数据存储路径
          path: .shardingsphere
      # 使用本地配置覆盖持久化配置
      overwrite: true
    # 数据源配置
    datasource:
      names: ds_0
      ds_0:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://106.15.106.128:3306/novel?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: novel
        password: anP8hyPSyppiWrbz
    # 规则配置
    rules:
      # 数据分片
      sharding:
        tables:
          # book_content 表
          book_content:
            # 数据节点
            actual-data-nodes: ds_$->{0}.book_content$->{0..9}
            # 分表策略
            table-strategy:
              standard:
                # 分片列名称
                sharding-column: chapter_id
                # 分片算法名称
                sharding-algorithm-name: bookContentSharding
        sharding-algorithms:
          bookContentSharding:
            # 行表达式分片算法，使用 Groovy 的表达式，提供对 SQL 语句中的 = 和 IN 的分片操作支持
            type: INLINE
            props:
              # 分片算法的行表达式
              algorithm-expression: book_content$->{chapter_id % 10}
